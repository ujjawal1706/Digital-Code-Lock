C51 COMPILER V9.60.0.0   CODE                                                              04/05/2021 14:09:36 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN .\Objects\CODE.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE CODE.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\CODE
                    -.lst) TABS(2) OBJECT(.\Objects\CODE.obj)

line level    source

   1          #include<stdio.h>
   2          #include<reg51.h>
   3          #include<stdlib.h>
   4          #include<string.h>
   5          void cmdwr(void);                             //LCD command write sub routine                   
   6          void datwr(void);                              //LCD data write sub routine
   7          void delay(void);                               //Delay function
   8          void check(void);                              //Password check function
   9          void answ(void);                               //Trial and result analysis function
  10          void asterisk(void);                           //Asterisk key input function
  11          void debounce_delay(void);               //Keypad debounce delay functiom
  12          void trl_chk(void);                           //trial Check function
  13          void init(void);                                 //system initialization
  14          sbit en=P3^2;                              
  15          sbit rs=P3^0;
  16          sbit rw=P3^1;
  17          sbit relay=P3^4;
  18          sbit alarm=P3^7;
  19          code unsigned char msg[14]="Enter Password";
  20          code unsigned char open_msg[11]="Locker Open";
  21          code unsigned char lock_msg[14]="Wrong Password";
  22          code unsigned char array1[5]={0x38,0x0f,0x06,0x01,0x80};
  23          code unsigned char array2[5]={0xc0,0xc0,0xc1,0xc2,0xc3};
  24          unsigned data passwd[5]={0,2,9,4,0};           //Locker password initial '0'is dummy
  25          unsigned data digit[5];
  26          unsigned char i,p,k,l,m,n,f,y;
  27          int count=0,num=0,trial=0;          //initializing count,trial and num to zero
  28          void main()
  29          {
  30   1       relay=0;                                 //turning relay off
  31   1       alarm=0;                               //turning alarm off
  32   1       while(1)
  33   1        {
  34   2          P2=0xf7;                         //Initialization key scan
  35   2          i=(P2&0xf0);
  36   2           {
  37   3            if(i==0xe0)
  38   3             {
  39   4               init();
  40   4               goto LOOP;
  41   4              }
  42   3            }
  43   2         }
  44   1      LOOP:while(1)                        //Entire key scan starts
  45   1      {
  46   2        P2=0xfe;
  47   2        i=(P2&0xf0);
  48   2        {
  49   3          if(i==0xe0)
  50   3           {
  51   4             debounce_delay();         //Delay to over come keypad bounce
  52   4             count++;                     //incrementing count
  53   4             asterisk();
  54   4             digit[count]=1;           //Setting key value
C51 COMPILER V9.60.0.0   CODE                                                              04/05/2021 14:09:36 PAGE 2   

  55   4             check();
  56   4             answ();  
  57   4            } 
  58   3          else if(i==0xd0)
  59   3            {
  60   4             debounce_delay();
  61   4             count++;
  62   4             asterisk();
  63   4             digit[count]=2;
  64   4             check();
  65   4             answ();
  66   4            }
  67   3          else if(i==0xb0)
  68   3            {
  69   4             debounce_delay();
  70   4             count++;
  71   4             asterisk();
  72   4             digit[count]=3;
  73   4             check();
  74   4             answ();
  75   4            } 
  76   3         }
  77   2        P2=0xfd;
  78   2        i=(P2&0xf0);
  79   2        {
  80   3          if(i==0xe0)
  81   3            {
  82   4             debounce_delay();
  83   4             count++;
  84   4             asterisk();
  85   4             digit[count]=4;
  86   4             check();
  87   4             answ();
  88   4            }
  89   3          else if(i==0xd0)
  90   3            {
  91   4             debounce_delay();
  92   4             count++;
  93   4             asterisk();
  94   4             digit[count]=5;
  95   4             check();
  96   4             answ();
  97   4            }
  98   3          else if(i==0xb0)
  99   3            {
 100   4             debounce_delay();
 101   4             count++; 
 102   4             asterisk();
 103   4             digit[count]=6;
 104   4             check();
 105   4             answ();
 106   4            }
 107   3        }
 108   2        P2=0xfb;
 109   2        i=(P2&0xf0);
 110   2         {
 111   3          if(i==0xe0)
 112   3           {
 113   4            debounce_delay();
 114   4            count++;
 115   4            asterisk();
 116   4            digit[count]=7;
C51 COMPILER V9.60.0.0   CODE                                                              04/05/2021 14:09:36 PAGE 3   

 117   4            check();
 118   4            answ();
 119   4           }
 120   3          else if(i==0xd0)
 121   3           {
 122   4            debounce_delay();
 123   4            count++;
 124   4            asterisk();
 125   4            digit[count]=8;
 126   4            check();
 127   4            answ();
 128   4           }
 129   3          else if(i==0xb0)
 130   3           {
 131   4            debounce_delay();
 132   4            count++;
 133   4            asterisk();
 134   4            digit[count]=9;
 135   4            check();
 136   4            answ();
 137   4           }
 138   3        }
 139   2        P2=0xf7;
 140   2        i=(P2&0xf0); 
 141   2         {
 142   3         if(i==0xe0)
 143   3          {
 144   4            debounce_delay();
 145   4            for(p=0;p<=4;p++)
 146   4             {                                          
 147   5              P1=array1[p];
 148   5              cmdwr();
 149   5              delay();
 150   5             }
 151   4            for(m=0;m<=13;m++)
 152   4             {
 153   5              P1=msg[m];                      //Enter password message display
 154   5              datwr();
 155   5              delay();
 156   5             }
 157   4           P1=0x3c;
 158   4           cmdwr();
 159   4           delay();
 160   4           P1=0xc0;
 161   4           cmdwr();
 162   4           delay();
 163   4           count=num=0;
 164   4          }
 165   3         else if(i==0xd0)
 166   3          {
 167   4           debounce_delay();
 168   4           count++;
 169   4           asterisk();
 170   4           digit[count]=0;
 171   4           check();
 172   4           answ();
 173   4          }
 174   3        else if(i==0xb0)
 175   3          {
 176   4           debounce_delay();
 177   4           relay=0;
 178   4           num=count=0;
C51 COMPILER V9.60.0.0   CODE                                                              04/05/2021 14:09:36 PAGE 4   

 179   4           P1=0x08;
 180   4           cmdwr();
 181   4           delay();
 182   4          }
 183   3         }
 184   2        }
 185   1       }
 186          void datwr()
 187           {
 188   1        rs=1;rw=0;en=1;delay();en=0;            //steps to send data to lcd
 189   1       }
 190          void cmdwr()
 191           {
 192   1        rs=0;rw=0;en=1;delay();en=0;          //steps to send command to lcd
 193   1       }
 194          void delay()                                       //software delay
 195           {    
 196   1        for(k=1;k<200;k++);
 197   1         {
 198   2          for(l=1;l<=200;l++);
 199   2         }
 200   1       }
 201          void check()
 202           {
 203   1        switch(count)
 204   1         {
 205   2         case 1:if(digit[count]==passwd[count])
 206   2                 {
 207   3                  num=num+1;
 208   3                 }
 209   2                 break;
 210   2        case 2:if(digit[count]==passwd[count])
 211   2                {
 212   3                 num=num+1;
 213   3                }
 214   2                 break;
 215   2        case 3:if(digit[count]==passwd[count])
 216   2               {
 217   3                num=num+1;
 218   3               }
 219   2                break;
 220   2        case 4:if(digit[count]==passwd[count])
 221   2               {
 222   3                num=num+1;
 223   3               }
 224   2               break;
 225   2             }
 226   1      }
 227          void answ()
 228           {
 229   1       if(count==4)                                       //Checking count
 230   1        {
 231   2        if(num==4)                                       //Checking "num" value to verify password 
 232   2           {
 233   3            relay=1;
 234   3            for(p=0;p<=4;p++)
 235   3             {
 236   4              P1=array1[p];
 237   4              cmdwr();
 238   4              delay();
 239   4             }
 240   3            for(f=0;f<=10;f++)
C51 COMPILER V9.60.0.0   CODE                                                              04/05/2021 14:09:36 PAGE 5   

 241   3             {
 242   4              P1=open_msg[f];                   //Locker open msg
 243   4              datwr();
 244   4              delay();
 245   4             }
 246   3            count=num=0;
 247   3            trial=0;
 248   3            while(1)
 249   3             {
 250   4              P2=0xf7;
 251   4              i=(P2&0xf0);
 252   4               {
 253   5                if(i==0xe0)
 254   5                 {
 255   6                  init();
 256   6                  break;
 257   6                 }
 258   5                else if(i==0xb0)
 259   5                 {
 260   6                  debounce_delay();               
 261   6                  relay=0; 
 262   6                  num=count=0;
 263   6                  P1=0x01;
 264   6                  cmdwr();
 265   6                  delay();
 266   6                  P1=0x02;
 267   6                  cmdwr();
 268   6                  delay();
 269   6                 }
 270   5               }
 271   4             }
 272   3            }
 273   2        else 
 274   2         {
 275   3          relay=0;
 276   3          for(p=0;p<=4;p++)
 277   3           {                                                                           
 278   4            P1=array1[p];
 279   4            cmdwr();
 280   4            delay();
 281   4           }
 282   3          for(n=0;n<=13;n++)
 283   3           {
 284   4            P1=lock_msg[n];                               //Locker closed message
 285   4            datwr();
 286   4            delay();
 287   4           }
 288   3          trial++;
 289   3          trl_chk();
 290   3          while(1)
 291   3           {
 292   4            P2=0xf7;
 293   4            i=(P2&0xf0);
 294   4           {
 295   5            if(i==0xe0)
 296   5             {
 297   6              init();
 298   6              break;
 299   6             }
 300   5           }
 301   4         }
 302   3        }
C51 COMPILER V9.60.0.0   CODE                                                              04/05/2021 14:09:36 PAGE 6   

 303   2       }
 304   1      }
 305          void asterisk()                             //Subroutine to display "*" in LCD
 306           {
 307   1        P1=array2[count];
 308   1        cmdwr(); 
 309   1        P1=0x2a;
 310   1        datwr();
 311   1       }
 312          void debounce_delay()                  //Debounce Delay generation using timers
 313           {
 314   1        for(y=0;y<=4;y++)
 315   1         {
 316   2          TMOD=0x01;
 317   2          TH0=0x3C;
 318   2          TL0=0xB0;
 319   2          TR0=1;
 320   2          while(TF0==0);
 321   2          TR0=0;
 322   2          TF0=0;
 323   2         }
 324   1       }
 325          void trl_chk()                          //Function to check trials
 326           {
 327   1        if(trial>2)                            //Verifying number of trials
 328   1         {
 329   2          P2=0x00;
 330   2          while(1)
 331   2           {
 332   3            alarm=1;
 333   3           }
 334   2         }
 335   1       }
 336          void init()                            //Function to initialize system
 337           {
 338   1        debounce_delay();
 339   1        for(p=0;p<=4;p++) 
 340   1         {                           
 341   2          P1=array1[p];
 342   2          cmdwr();
 343   2          delay();
 344   2         }
 345   1        for(m=0;m<=13;m++)
 346   1         {
 347   2          P1=msg[m];
 348   2          datwr();
 349   2          delay();
 350   2         }
 351   1         P1=0x3c;
 352   1         cmdwr();
 353   1         delay(); 
 354   1         P1=0xc0;
 355   1         cmdwr();
 356   1         delay();
 357   1         count=num=0;
 358   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1189    ----
   CONSTANT SIZE    =     49    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   CODE                                                              04/05/2021 14:09:36 PAGE 7   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
